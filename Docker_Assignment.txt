Assignment

NOTE: Do not forget to see manual page using "--help" option in command when searching for options/commands for a particular task.

1. Install Docker, either on your native OS or on a VM. Make sure it runs. Type "docker -v" to check if it's installed.
:- Docker version 19.03.1, build 74b1e89e8a

2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
:- docker pull nginx

3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
:- docker images -a

4. Find out the "Full" ImageId of the image that you pulled and write it below.
:- IMAGE ID : 77af4d6b9913 (docker images nginx  -q)

5. Create a container of your image 
:- docker run node-docker

6. List all the running containers
:- docker ps

7. List all the running and stopped containers
:- docker ps -a

8. Find out the "Full" containerId of the container and write it below.
:- e90b8831a4b8 (docker ps -a -q)

9. Find out how many image layers are used to build this image.
:- docker history nginx

10. Get the Apache Tomcat 7 server image from the docker hub.
:- docker pull Tomcat7

11. Run the Apache Tomcat 7.
:- docker run -it --rm -p 8888:8080 tomcat:8.0

12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
:- docker-machine ls

13. Which Port it is using?
:- 8888

14. Try to access the Tomcat's home page from your machine/vm.
:- docker ps -> docker port {name}

15. What is the disk size of Apache Tomcat image?
:- docker system df

16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
:- docker inspect tomcat7

17. Find out which port is exposed for tomcat?
:- 8080

18. Run multiple conntainers of tomcat on different port and access it's home page.
:- 	docker run --name Container1 tomcat
	docker run --name Container2 tomcat
	docker run --name Container3 tomcat

19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
:- docker pull ubuntu

20. Run the container of ubuntu in attached mode.
:- docker run ubuntu

21. Run the container of another ubuntu in detached mode.
:- docker run -d -p 80:80 ubuntu service nginx stat

22. Check how many ubuntu containers are running and stopped
:- docker ps -l

23. Is the tomcat container running? If no, start one.
:- docker ps

24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).
:- docker logs tomcat CONTAINER

25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
:- docker ps

26. Login as root user in ubuntu container
:- docker exec -it Ubuntu bash

27. Create a file with any name in root directory
:- mkdir assignment

28. Install software of your choice in ubuntu container using "apt-get install"
:-  apt-get update                            
    apt-get install rolldice

29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.
:- exit
30. Check if the ubuntu container is running.
:- docker ps
31. Create a new ubuntu container out of the same image as that previous container in attached mode.
:- docker run --name MyContainer1 ubuntu

32. Login as a root user
:- docker exec -it ubu16_1 /bin/bash
33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.
:- exit 
   docker kill ubu16_1
34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.
:- docker exec -it ubu16 /bin/bas
35. Create an Image out of the existing container.
:- docker image build

36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.
:- docker run -it --name ubu16_2 ubu16_2
   ls
37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.
:- docker ps
   docker stop tomcat7
   docker stop tomcat7ii
   docker ps
38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
   docker run -d -p 8080:8080 --name tomcat7 tomcat:7
   docker ps
39. Now, access the tomcat container's home page.
	docker exec -it tomcat7 /bin/bash
        $ curl http://host-ip:port
Now, try to run command that proves the concept of following three options:-
1. -a
2. -f
3. -q

write atleast 1 command using each option above and prove their concepts as described in the --help.
:- docker images --help
   docker images -a
   docker images -f "dangling=true"
   docker images -q

40. type below command:-
	docker ps --help
Now, try to run command that proves the concept of following six options:-
1. -a
2. -f
3. -q
4. -n
5. -l
6. -s

